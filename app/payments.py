import time

from aiogram import F, Router, types
from aiogram.filters.command import Command
from aiogram.types import Message, LabeledPrice, PreCheckoutQuery

import config
from create_bot import bot

import Database.request as rq

router_payments = Router()

PRICE = [LabeledPrice(label="–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Ç–≥–∫ –∫–∞–Ω–∞–ª–∞", amount=50000)] # amount –≤ –∫–æ–ø–µ–π–∫–∞—Ö, —Ç.–µ —Å–µ–π—á–∞—Å 1 —Ä—É–±–ª—å

""" –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É' """
@router_payments.message(F.text == "–û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")
@router_payments.message(Command("payments"))
async def pay_sub(message: Message):
    await bot.send_invoice(chat_id=message.chat.id, 
                           title="–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Ç–≥–∫ –∫–∞–Ω–∞–ª–∞", 
                           description="–ü–æ–º–∏–º–æ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Ç–≥–∫ –∫–∞–Ω–∞–ª–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø –∫ Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é", 
                           payload='invoice', 
                           provider_token=config.PROVIDER_TOKEN, 
                           prices=PRICE,
                           currency='rub', 
                           start_parameter="subscription")
    
""" –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ PreCheckoutQuery """
@router_payments.pre_checkout_query()
async def process_pre_checkout_query(pre_checkout_query: PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)

""" –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã """
@router_payments.message(F.successful_payment)
async def successful_payment(message: Message):
    await rq.is_paid(message.from_user.id)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç
    invite_link = await bot.create_chat_invite_link(
        chat_id=config.CLOSED_TGK,
        member_limit=1,
        expire_date=int(time.time()) + 600)    
    
    await message.answer(f"""
‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!

üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –¢–ì-–∫–∞–Ω–∞–ª:
{invite_link.invite_link}

‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ —Ç–æ–ª—å–∫–æ 10 –º–∏–Ω—É—Ç. –ï—Å–ª–∏ –≤—ã –Ω–µ —É—Å–ø–µ–ª–∏ –ø–µ—Ä–µ–π—Ç–∏, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—É—é, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É:
/getlink
""")
    
""" –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã 'getlink' """
@router_payments.message(Command('getlink'))
async def new_link(message: Message):
    user = await rq.user_info(tg_id=message.from_user.id)

    if user['is_paid'] == False:
        await bot.answer("–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞! –î–ª—è –µ–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /payments")

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç
    invite_link = await bot.create_chat_invite_link(
        chat_id=config.CLOSED_TGK,
        member_limit=1,
        expire_date=int(time.time()) + 600)    

    await message.answer(f"""
üîê –ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –¢–ì-–∫–∞–Ω–∞–ª

–í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø:
{invite_link.invite_link}

‚è≥ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: 10 –º–∏–Ω—É—Ç
‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
""")    